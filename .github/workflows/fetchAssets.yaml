name: Fetch Assets

on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-and-commit-assets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Set environment variables
        run: |
          echo "REQUIRED_ASSETS=Rules.zip:libmathcat_py-32-3.11-win.zip" >> $GITHUB_ENV
      - name: Download assets
        run: |
          echo "REQUIRED_ASSETS=$REQUIRED_ASSETS"
          IFS=':' read -r -a REQUIRED_ASSETS <<< "$REQUIRED_ASSETS"
          RELEASE_URL='https://api.github.com/repos/NSoiffer/MathCATForPython/releases/latest'
          RELEASE_DATA=$(curl -s -H 'Accept: application/vnd.github.v3+json' "$RELEASE_URL")

          if [ ! -d assets ] ; then
            mkdir assets
          fi

          for ASSET_NAME in "${REQUIRED_ASSETS[@]}"; do
            echo "ASSET_NAME=$ASSET_NAME"
            ASSET_URL=$(echo "$RELEASE_DATA" | jq -r ".assets[] | select(.name == \"$ASSET_NAME\") | .url")
            if [[ "$ASSET_URL" != "null" ]]; then
              echo "Downloading $ASSET_NAME"
              curl -L -H "Accept: application/octet-stream" -o "$ASSET_NAME" "$ASSET_URL"
            else
              echo "Asset $ASSET_NAME not found in the latest release."
              exit 1
            fi
          done
      - name: Delete previously downloaded assets
        run: |
          for file in assets/*; do
            echo "Removing $file"
            rm -rf "$file"
          done
      - name: Unzip assets
        run: |
          IFS=':' read -r -a REQUIRED_ASSETS <<< "$REQUIRED_ASSETS"
          for ASSET_NAME in "${REQUIRED_ASSETS[@]}"; do
            unzip -o "$ASSET_NAME" -d assets
            rm -f "$ASSET_NAME"
          done
      - name: Commit and push downloaded assets
        run: |
          git diff --quiet && echo "No changes to commit" && exit 0
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Add downloaded assets"
          git push
